%h7_small_caps {
	color: var(--awb-color8);
	font-family: "Inter";
	font-size: 14px;
	font-weight: 700;
	line-height: 1.5;
	letter-spacing: 2px;
	text-transform: uppercase;
	font-style: normal;
}
%separator_underline {
	padding-bottom: 10px;
	border-bottom: 1px solid var(--awb-color5);
}

@mixin boxShadow($depth) {
	@if ($depth==0) {
		box-shadow: 0px 1px 2px transparent;
	}
	@if ($depth==1) {
		box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.05);
	}
	@if ($depth==2) {
		box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1), 0px 1px 2px rgba(0, 0, 0, 0.06);
	}
	@if ($depth==3) {
		box-shadow: 0px 4px 6px -1px rgba(0, 0, 0, 0.1),
			0px 2px 4px -1px rgba(0, 0, 0, 0.06);
	}
	@if ($depth==4) {
		box-shadow: 0px 10px 15px -3px rgba(0, 0, 0, 0.1),
			0px 4px 6px -2px rgba(0, 0, 0, 0.05);
	}
	@if ($depth==5) {
		box-shadow: 0px 20px 25px -5px rgba(0, 0, 0, 0.1),
			0px 10px 10px -5px rgba(0, 0, 0, 0.04);
	}
	@if ($depth==6) {
		box-shadow: 0px 25px 50px -12px rgba(0, 0, 0, 0.25);
	}
}

@mixin termsTitleStyling() {
	margin: 8px 0 !important;
	&:before {
		content: "\25aa";
		display: inline-block;
		vertical-align: middle;
		margin-right: 1rem;
		font-size: 18px;
	}
}

// ? padding-top is used to manually proportion images that fill a specific size
// ? <img> tags do not ever use this
// ? div.bgimage--container uses this, with ANY inner content absolutely positioned.
// ? for anything more complex than the bgimage case; essentially use a .content in its place
@mixin aspect-ratio($w, $h) {
	position: relative;

	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: (math.div($h, $w) * 100%);
	}
}

@mixin center_absolute() {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}

@mixin displayedInvisible() {
	visibility: hidden;
	position: absolute;
	left: -9999px;
	height: 0;
	overflow: hidden;
	min-height: 0px;
}
//
@mixin insetImageFrame() {
	&:before {
		$inset: calc(0.1 * var(--awb-width-large));
		$insetW: calc(0.05 * var(--awb-width-large));
		content: "";
		position: absolute;
		top: $inset;
		left: $insetW;
		bottom: $inset;
		right: $insetW;
		border: 1px solid var(--awb-custom_color_5);
		z-index: 2;
	}
}
//
//
//
@mixin postCardOnHover() {
	//
	i.think-icon-arrow-short,
	i.think-icon-arrow-long,
	i.icon-mkb-arrow-right-solid,
	.fusion-imageframe img,
	.fusion-image-wrapper img {
		transition: all 0.5s $bezier;
	}
	//
	&:hover,
	&:focus {
		// arrow moves right and turns blue
		i.think-icon-arrow-short,
		i.think-icon-arrow-long,
		i.icon-mkb-arrow-right-solid {
			transform: translateX(20px);
			color: var(--awb-color8) !important;
		}

		// image scales up
		.fusion-image-wrapper img,
		.fusion-imageframe img {
			transform: scale(1.1);
		}
	}
}

//
//
//
@mixin gradientBorder($el: before, $degrees: 0deg, $w: 2px, $h: 120%) {
	position: relative;
	&:#{$el} {
		content: "";
		display: block;
		position: absolute;
		bottom: 0;
		left: 0;
		width: $w;
		height: $h;
		//
		background: linear-gradient(
			$degrees,
			rgba(219, 180, 44, 1) 0%,
			rgba(255, 255, 255, 0) 95%
		);
	}
}

@mixin geoPattern(
	$dir1_attr: top,
	$dir1_val: 0px,
	$dir2_attr: left,
	$dir2_val: 0px,
	$w: 100%,
	$h: 100%
) {
	// Setup
	content: "";
	width: $w;
	height: $h;
	position: absolute;
	// Positioning
	#{$dir1_attr}: $dir1_val;
	#{$dir2_attr}: $dir2_val;
	// Texture
	background-image: url(../../_assets/img/geo_smalltile.svg);
	background-repeat: repeat;
	background-position: center;
	background-size: 150px;
	// background-size: contain;
}

//
@mixin buttonOrnamentStyles() {
	//
	margin-left: 0.5em; // ? adjusts for the ornament overflowing the element
	margin-right: 0.5em; // ? adjusts for the ornament overflowing the element
	.button__ornament {
		position: absolute;
		//
		&--vertical {
			top: $button--ornament-offset;
			bottom: $button--ornament-offset;
			left: 0;
			right: 0;
		}
		//
		&--horizontal {
			left: $button--ornament-offset;
			right: $button--ornament-offset;
			top: 0;
			bottom: 0;
		}
		//
		&-top-bottom,
		&-left-right {
			position: absolute;
			top: 0;
			right: 0;
			bottom: 0;
			left: 0;

			&:before,
			&:after {
				content: "";
				position: absolute;
				background-color: $button--color-1;
				transition: transform 400ms cubic-bezier(0.54, 0.06, 0.39, 0.96);
			}
		}
		//
		&-top-bottom {
			&:before,
			&:after {
				height: 1px;
				left: 0;
				right: 0;
			}

			&:before {
				top: 0;
			}

			&:after {
				bottom: 0;
			}
		}
		//
		&-left-right {
			&:before,
			&:after {
				width: 1px;
				top: 0;
				bottom: 0;
			}

			&:before {
				left: 0;
			}

			&:after {
				right: 0;
			}
		}
	}
	//
	&:hover,
	&:focus {
		//
		.button__ornament {
			//
			&-left-right {
				&:before,
				&:after {
					transform: scale(1, 0);
				}
			}
			//
			&-top-bottom {
				&:before,
				&:after {
					transform: scale(0, 1);
				}
			}
		}
	}
}
